// <auto-generated />
using System;
using LDI.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LDI.DataAccess.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20190409085057_version_1.2")]
    partial class version_12
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LDI.Model.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsLeaf");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("ParentID");

                    b.Property<DateTime?>("UpdateTime");

                    b.HasKey("ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("LDI.Model.Channel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorID");

                    b.Property<DateTime>("CreateTime");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<string>("Description");

                    b.Property<string>("ImagePath");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<DateTime?>("UpdateTime");

                    b.HasKey("ID");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("LDI.Model.Content", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID");

                    b.Property<int>("ChannelID");

                    b.Property<DateTime>("CreateTime");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<double>("Rating");

                    b.Property<string>("Title");

                    b.Property<DateTime?>("UpdateTime");

                    b.Property<long>("Views");

                    b.HasKey("ID");

                    b.ToTable("Contents");
                });

            modelBuilder.Entity("LDI.Model.Media", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContentID");

                    b.Property<DateTime>("CreateTime");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<DateTime>("Duration");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Path");

                    b.Property<int>("Type");

                    b.Property<DateTime?>("UpdateTime");

                    b.HasKey("ID");

                    b.HasIndex("ContentID");

                    b.ToTable("Medias");
                });

            modelBuilder.Entity("LDI.Model.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<DateTime?>("UpdateTime");

                    b.HasKey("ID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("LDI.Model.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate");

                    b.Property<DateTime>("CreateTime");

                    b.Property<DateTime?>("DeletedTime");

                    b.Property<string>("EMail");

                    b.Property<string>("FirstName");

                    b.Property<string>("Gender");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("LastLogin");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("ProfileImage");

                    b.Property<Guid>("TimeStamp");

                    b.Property<DateTime?>("UpdateTime");

                    b.Property<string>("Username");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("LDI.Model.UserChannel", b =>
                {
                    b.Property<int>("UserID");

                    b.Property<int>("ChannelID");

                    b.HasKey("UserID", "ChannelID");

                    b.HasIndex("ChannelID");

                    b.ToTable("UserChannel");
                });

            modelBuilder.Entity("LDI.Model.UserRole", b =>
                {
                    b.Property<int>("UserID");

                    b.Property<int>("RoleID");

                    b.HasKey("UserID", "RoleID");

                    b.HasIndex("RoleID");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("LDI.Model.Media", b =>
                {
                    b.HasOne("LDI.Model.Content")
                        .WithMany("MediaCollection")
                        .HasForeignKey("ContentID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LDI.Model.UserChannel", b =>
                {
                    b.HasOne("LDI.Model.Channel", "Channel")
                        .WithMany("UserChannels")
                        .HasForeignKey("ChannelID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LDI.Model.User", "User")
                        .WithMany("UserChannels")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LDI.Model.UserRole", b =>
                {
                    b.HasOne("LDI.Model.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LDI.Model.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
